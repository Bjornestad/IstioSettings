# MMMMMMMMMMMMMM>!!!>!!!>>>>>>!!!>!!!>MMMMMMMMMMMMMM
# MMMMMMMMMMMM>!>!!!>>>>>>>>>>>>>>!!!>!>MMMMMMMMMMMM
# MMMMMMMMMMM!!!!!>>>>>>>>>>>>>>>>>>!!!!!MMMMMMMMMMM
# MMMMMMMMM>>>!!>>>>>>>>>>>>>>>>>>>>>>!!>>>MMMMMMMMM
# MMMMMMMM>>>!>>>>>>>>>>>>>>>>>>>>>>>>>>!>>>MMMMMMMM
# MMMMMMM>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>MMMMMMM
# MMMMMM>>!>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>!>>MMMMMM
# MMMMM>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>MMMMM
# MMMM?>!>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>!>?MMMM
# MMM:7>>>>>>>>>>>>>>>>>>>>>>>>C>>>>>>>>?7>>>>>7:MMM
# MMM:!>>>>>>>>>>>>>>C7>>>>>>>>O?>>>>>>>?O7$>>>!:MMM
# MM:!!>>>>>>>>>>>>>>$7>>>>>>>>QC>>>>>>>7$?O>>>!!:MM
# M>!>>>>>>>>>>>>>>>?$>>>>>>>>>$$>>>>>>>7$?O>>>>>!>M
# M!!>>>>>>>>>>>>7?OQC>>>>>>>>>7$Q?7>>>>>$OC>>>>>!!M
# M>!>>>>>>>>>>C$QQQQ?>>>>7?>>>>CQQQ$C7>>C$>>>>>>!>M
# >>!>>>>>>7C$QQQ$QQQQ7>>>OQ7>>OQ$$QQQQQO?7>>>>>>!>>
# >!>>>>7O$QQQO?O7OQOQO>>>$QC>>?!$?OO?$OQQQ$OC7>>>!>
# >!>>C$QQ$$$>;;$C777$O>>>QQ$>>!;OO??$?;;:CQ$$O>>>!>
# >!>>77>>>$:...!$OO$?–>>>$O$>>>;;?OO7;...;C?>>>>>!>
# !>>>>>>>C7.....–7?!;;>>>>>>>>>>..........:$>>>>>>!
# >>>>>>>>$–..........–7>>CO>>>>O:;–:::!!:::$>>>>>>>
# >>>>>>>>Q–.........;??>7QC>>>>?$$QQQQQQQQQQ7>>>>>>
# !>>>>>>7Q–......;–7OO>>CQ7>>>>>$QQQQQQQQQQQ7>>>>>!
# >>>>>>>>Q!....;!OQQ?>>>>?>>>>>>7$QQQQQQQQQQ>>>>>>>
# >7>?>>>?QQC???$QQ$7>>>>>>>>>>>>>7QQQQQQQQQQ7>>>>>>
# >7OO>>>7QQQQQQQQQ7>>>>>>>>>>>>>>>7?C$QQQQQO>>>>>>>
# >>$O7>>>C$$$QOOO7>>>>>>COO$$$?>>>>>77?OC7?7>>>>>>>
# !>$C?>>>>77777777>>>>7$7!!––!$7>>>>77777777>>>>>>!
# >>CQ7>>>>>777777>>>>7O:......>$>>>>>7777777>>>>>>>
# >>>>>>>>>>>7777>>>>>O–..;;;..;OC>>>>>77777>>>>>>>!
# !>>>>>>>>>>>>>>>>>>O:;>CO$O?!;:$>>>>>>>>>>>>>>>>>!
# !!>>>>>>>>>>>>>>>>7$;7QQQQQQQ7;Q7>>>>>>>>>>>>>>>!!
# >!>>>>>>>>>>>>>>>>OQ7$QQQQQQQC!QC>>>>>>>>>>>>>>>>>
# >!>>>>>>>>>>>>>>>>QQQQQQQQQQQQQQO>>>>>>>>>>>>>>>!>
# >>>>>>>>>>>>>>>>>7QQQQQQQQQQQQQQ$>>>>>>>>>>>>>>>!>
# M>>>>>>>>>>>>>>>>>QQQ$OCCQO?7C$Q$>>>>>>>>>>>>>>>>M
# M7>>>>>>>>>>>>>>>>QQO7777$77777O$>>>>>>>>>>>>>>>7M
# M$7!>>>>>>>>>>>>>>O$77777?77777OC>>>>>>>>>>>>>!7$M
# MM>>!>>>>>>>>>>>>>7Q?777777777$Q>>>>>>>>>>>>>!>>MM
# MMM!!>>>>>>>>>>>>>>7QC7777777O$7>>>>>>>>>>>>>!!MMM
# MMM>>>>>>>>>>>>>>>>>?Q?77777?Q?>>>>>>>>>>>>>!>>MMM
# MMMM>>>>>>>>>>>>>>>7$Q$77777$QO>>>>>>>>>>>>>>>MMMM
# MMMMM>>>>>>>>>>>>>>>>?$$?7?$Q7>>>>>>>>>>>>>>>MMMMM
# MMMMMM>!>>>>>>>>>>>>>>>OQQQO7>>>>>>>>>>>>>!>MMMMMM
# MMMMMMM>>>>>>>>>>>>>>>>>>7>>>>>>>>>>>>>>>>>MMMMMMM
# MMMMMMMM>>>!>>>>>>>>>>>>>>>>>>>>>>>>>>!>>>MMMMMMMM
# MMMMMMMMM>!!!!>>>>>>>>>>>>>>>>>>>>>>!!!!>MMMMMMMMM
# MMMMMMMMMMM!!>!!>>>>>>>>>>>>>>>>>>!!>!!MMMMMMMMMMM
# MMMMMMMMMMMM>!!!>!!>>>>>>>>>>>>!!>!!!>MMMMMMMMMMMM
# MMMMMMMMMMMMMMM!>!>!!!!>>>>!!!!>!>!MMMMMMMMMMMMMMM




--- ########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service01 #service01.team.svc.cluster.local
  namespace: team1
spec:
  selector:
    matchLabels:
      app: service01
  template:
    metadata:
      labels:
        app: service01
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
      - name: server
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
        image: gcr.io/google-samples/microservices-demo/emailservice:v0.8.1 #insert correct image
        ports:
        - containerPort: 80
        env:
        - name: PORT
          value: "80"
        - name: DISABLE_PROFILER #Turn on if performance metrics are wanted
          value: "1"
        readinessProbe:
          periodSeconds: 5
          grpc:
            port: 80
        livenessProbe:
          periodSeconds: 5
          grpc:
            port: 80
        env:
        - name: PORT
          value: "80"
        #resources: Check if these are needed in the long run
          #requests:
            #cpu: 100m
            #memory: 64Mi
          #limits:
            #cpu: 200m
            #memory: 128Mi    
---
apiVersion: v1
kind: Service
metadata:
  name: team1
spec:
  type: ClusterIP
  selector:
    app: service01
  ports:
  - name: grpc
    port: 5000
    targetPort: 80
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: service01
  namespace: team1
spec:
  host: service01.team1.svc.cluster.local 
  trafficPolicy:
    tls:
      mode: STRICT
--- ########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service02
  namespace: team1
spec:
  selector:
    matchLabels:
      app: service02
  template:
    metadata:
      labels:
        app: service02
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
      - name: server
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
        image: gcr.io/google-samples/microservices-demo/emailservice:v0.8.1 #insert correct image
        ports:
        - containerPort: 80
        env:
        - name: PORT
          value: "8080"
        - name: DISABLE_PROFILER #Turn on if performance metrics are wanted
          value: "1"
        readinessProbe:
          periodSeconds: 5
          grpc:
            port: 80
        livenessProbe:
          periodSeconds: 5
          grpc:
            port: 80
        env:
        - name: PORT
          value: "80"
        #resources: Check if these are needed in the long run
          #requests:
            #cpu: 100m
            #memory: 64Mi
          #limits:
            #cpu: 200m
            #memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: team1
spec:
  type: ClusterIP
  selector:
    app: service02
  ports:
  - name: grpc
    port: 5000
    targetPort: 80
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: service02
  namespace: team1
spec:
  host: service2.team1.svc.cluster.local 
  trafficPolicy:
    tls:
      mode: STRICT
--- ########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service02
  namespace: team2
spec:
  selector:
    matchLabels:
      app: service02
  template:
    metadata:
      labels:
        app: service02
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
      - name: server
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
        image: gcr.io/google-samples/microservices-demo/emailservice:v0.8.1 #insert correct image
        ports:
        - containerPort: 80
        env:
        - name: PORT
          value: "80"
        - name: DISABLE_PROFILER #Turn on if performance metrics are wanted
          value: "1"
        readinessProbe:
          periodSeconds: 5
          grpc:
            port: 80
        livenessProbe:
          periodSeconds: 5
          grpc:
            port: 80
        env:
        - name: PORT
          value: "80"
        #resources: Check if these are needed in the long run
          #requests:
            #cpu: 100m
            #memory: 64Mi
          #limits:
            #cpu: 200m
            #memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: team2
spec:
  type: ClusterIP
  selector:
    app: service02
  ports:
  - name: grpc
    port: 5001
    targetPort: 80
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: service02
  namespace: team2
spec:
  host: service02.team2.svc.cluster.local 
  trafficPolicy:
    tls:
      mode: STRICT
--- ########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service03
  namespace: team2
spec:
  selector:
    matchLabels:
      app: service03
  template:
    metadata:
      labels:
        app: service03
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
      - name: server
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
        image: gcr.io/google-samples/microservices-demo/emailservice:v0.8.1 #insert correct image
        ports:
        - containerPort: 80
        env:
        - name: PORT
          value: "8080"
        - name: DISABLE_PROFILER #Turn on if performance metrics are wanted
          value: "1"
        readinessProbe:
          periodSeconds: 5
          grpc:
            port: 80
        livenessProbe:
          periodSeconds: 5
          grpc:
            port: 80
        env:
        - name: PORT
          value: "80"
        #resources: Check if these are needed in the long run
          #requests:
            #cpu: 100m
            #memory: 64Mi
          #limits:
            #cpu: 200m
            #memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: team2
spec:
  type: ClusterIP
  selector:
    app: service03
  ports:
  - name: grpc
    port: 5001
    targetPort: 80
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: service03
  namespace: team2
spec:
  host: service03.team2.svc.cluster.local 
  trafficPolicy:
    tls:
      mode: STRICT
--- ########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: connection-security-redis
  namespace: team3
spec:
  selector:
    matchLabels:
      app: connection-security-redis
  template:
    metadata:
      labels:
        app: connection-security-redis
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
      - name: server
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
        image: gcr.io/google-samples/microservices-demo/emailservice:v0.8.1 #insert correct image
        ports:
        - containerPort: 6379
        env:
        - name: PORT
          value: "6379"
        - name: DISABLE_PROFILER #Turn on if performance metrics are wanted
          value: "1"
        readinessProbe:
          periodSeconds: 5
          grpc:
            port: 6379
        livenessProbe:
          periodSeconds: 5
          grpc:
            port: 6379
        env:
        - name: PORT
          value: "6379"
        #resources: Check if these are needed in the long run
          #requests:
            #cpu: 100m
            #memory: 64Mi
          #limits:
            #cpu: 200m
            #memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: team3
spec:
  type: ClusterIP
  selector:
    app: connection-security-redis
  ports:
  - name: grpc
    port: 5002
    targetPort: 6379
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: connection-security-redis
  namespace: team3
spec:
  host: connection-security-redis.team3.svc.cluster.local 
  trafficPolicy:
    tls:
      mode: STRICT
--- ########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: connection-security-redis-headless
  namespace: team3
spec:
  selector:
    matchLabels:
      app: connection-security-redis-headless
  template:
    metadata:
      labels:
        app: connection-security-redis-headless
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
      - name: server
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
        image: gcr.io/google-samples/microservices-demo/emailservice:v0.8.1 #insert correct image
        ports:
        - containerPort: 6379
        env:
        - name: PORT
          value: "6379"
        - name: DISABLE_PROFILER #Turn on if performance metrics are wanted
          value: "1"
        readinessProbe:
          periodSeconds: 5
          grpc:
            port: 6379
        livenessProbe:
          periodSeconds: 5
          grpc:
            port: 6379
        env:
        - name: PORT
          value: "6379"
        #resources: Check if these are needed in the long run
          #requests:
            #cpu: 100m
            #memory: 64Mi
          #limits:
            #cpu: 200m
            #memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: team3
spec:
  type: ClusterIP
  selector:
    app: connection-security-redis-headless
  ports:
  - name: grpc
    port: 5002
    targetPort: 6379
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: connection-security-redis-headless
  namespace: team3
spec:
  host: connection-security-redis-headless.team3.svc.cluster.local 
  trafficPolicy:
    tls:
      mode: STRICT
--- ########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: two-factor
  namespace: team3
spec:
  selector:
    matchLabels:
      app: two-factor
  template:
    metadata:
      labels:
        app: two-factor
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
      - name: server
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
        image: gcr.io/google-samples/microservices-demo/emailservice:v0.8.1 #insert correct image
        ports:
        - containerPort: 8000
        env:
        - name: PORT
          value: "8000"
        - name: DISABLE_PROFILER #Turn on if performance metrics are wanted
          value: "1"
        readinessProbe:
          periodSeconds: 5
          grpc:
            port: 8000
        livenessProbe:
          periodSeconds: 5
          grpc:
            port: 8000
        env:
        - name: PORT
          value: "8000"
        #resources: Check if these are needed in the long run
          #requests:
            #cpu: 100m
            #memory: 64Mi
          #limits:
            #cpu: 200m
            #memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: team3
spec:
  type: ClusterIP
  selector:
    app: two-factor
  ports:
  - name: grpc
    port: 5003
    targetPort: 8000
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: two-factor
  namespace: team3
spec:
  host: two-factor.team3.svc.cluster.local 
  trafficPolicy:
    tls:
      mode: STRICT
--- ########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-kubernetes-07
  namespace: team4
spec:
  selector:
    matchLabels:
      app: hello-kubernetes-07
  template:
    metadata:
      labels:
        app: hello-kubernetes-07
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
      - name: server
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
        image: gcr.io/google-samples/microservices-demo/emailservice:v0.8.1 #insert correct image
        ports:
        - containerPort: 8080
        env:
        - name: PORT
          value: "8080"
        - name: DISABLE_PROFILER #Turn on if performance metrics are wanted
          value: "1"
        readinessProbe:
          periodSeconds: 5
          grpc:
            port: 8080
        livenessProbe:
          periodSeconds: 5
          grpc:
            port: 8080
        env:
        - name: PORT
          value: "8080"
        #resources: Check if these are needed in the long run
          #requests:
            #cpu: 100m
            #memory: 64Mi
          #limits:
            #cpu: 200m
            #memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: team4
spec:
  type: ClusterIP
  selector:
    app: hello-kubernetes-07
  ports:
  - name: grpc
    port: 5004
    targetPort: 8080
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: hello-kubernetes-07
  namespace: team4
spec:
  host: hello-kubernetes-07.team4.svc.cluster.local 
  trafficPolicy:
    tls:
      mode: STRICT
--- ########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-kubernetes-08
  namespace: team4
spec:
  selector:
    matchLabels:
      app: hello-kubernetes-08
  template:
    metadata:
      labels:
        app: hello-kubernetes-08
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
      - name: server
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
        image: gcr.io/google-samples/microservices-demo/emailservice:v0.8.1 #insert correct image
        ports:
        - containerPort: 8080
        env:
        - name: PORT
          value: "8080"
        - name: DISABLE_PROFILER #Turn on if performance metrics are wanted
          value: "1"
        readinessProbe:
          periodSeconds: 5
          grpc:
            port: 8080
        livenessProbe:
          periodSeconds: 5
          grpc:
            port: 8080
        env:
        - name: PORT
          value: "8080"
        #resources: Check if these are needed in the long run
          #requests:
            #cpu: 100m
            #memory: 64Mi
          #limits:
            #cpu: 200m
            #memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: team4
spec:
  type: ClusterIP
  selector:
    app: hello-kubernetes-08
  ports:
  - name: grpc
    port: 5004
    targetPort: 80
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: hello-kubernetes-08
  namespace: team4
spec:
  host: hello-kubernetes-08.team4.svc.cluster.local 
  trafficPolicy:
    tls:
      mode: STRICT
--- ########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service05
  namespace: team4
spec:
  selector:
    matchLabels:
      app: service05
  template:
    metadata:
      labels:
        app: service05
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
      - name: server
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
        image: gcr.io/google-samples/microservices-demo/emailservice:v0.8.1 #insert correct image
        ports:
        - containerPort: 80
        env:
        - name: PORT
          value: "80"
        - name: DISABLE_PROFILER #Turn on if performance metrics are wanted
          value: "1"
        readinessProbe:
          periodSeconds: 5
          grpc:
            port: 80
        livenessProbe:
          periodSeconds: 5
          grpc:
            port: 80
        env:
        - name: PORT
          value: "80"
        #resources: Check if these are needed in the long run
          #requests:
            #cpu: 100m
            #memory: 64Mi
          #limits:
            #cpu: 200m
            #memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: team4
spec:
  type: ClusterIP
  selector:
    app: service05
  ports:
  - name: grpc
    port: 5004
    targetPort: 80
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: service06
  namespace: team4
spec:
  host: service05.team4.svc.cluster.local 
  trafficPolicy:
    tls:
      mode: STRICT
--- ########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service09
  namespace: team4
spec:
  selector:
    matchLabels:
      app: service09
  template:
    metadata:
      labels:
        app: service09
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
      - name: server
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
        image: gcr.io/google-samples/microservices-demo/emailservice:v0.8.1 #insert correct image
        ports:
        - containerPort: 80
        env:
        - name: PORT
          value: "80"
        - name: DISABLE_PROFILER #Turn on if performance metrics are wanted
          value: "1"
        readinessProbe:
          periodSeconds: 5
          grpc:
            port: 80
        livenessProbe:
          periodSeconds: 5
          grpc:
            port: 80
        env:
        - name: PORT
          value: "80"
        #resources: Check if these are needed in the long run
          #requests:
            #cpu: 100m
            #memory: 64Mi
          #limits:
            #cpu: 200m
            #memory: 128Mi
--- 
apiVersion: v1 
kind: Service
metadata:
  name: team4
spec:
  type: ClusterIP
  selector:
    app: service09
  ports:
  - name: grpc
    port: 5004
    targetPort: 80
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: service09
  namespace: team4
spec:
  host: service09.team4.svc.cluster.local 
  trafficPolicy:
    tls:
      mode: STRICT
--- ########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
  namespace: team5
spec:
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
      - name: server
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
        image: gcr.io/google-samples/microservices-demo/emailservice:v0.8.1 #insert correct image
        ports:
        - containerPort: 27017
        env:
        - name: PORT
          value: "27017"
        - name: DISABLE_PROFILER #Turn on if performance metrics are wanted
          value: "1"
        readinessProbe:
          periodSeconds: 5
          grpc:
            port: 27017
        livenessProbe:
          periodSeconds: 5
          grpc:
            port: 27017
        env:
        - name: PORT
          value: "27017"
        #resources: Check if these are needed in the long run
          #requests:
            #cpu: 100m
            #memory: 64Mi
          #limits:
            #cpu: 200m
            #memory: 128Mi
--- 
apiVersion: v1 
kind: Service
metadata:
  name: team5
spec:
  type: ClusterIP
  selector:
    app: db
  ports:
  - name: grpc
    port: 5005
    targetPort: 27017
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: db
  namespace: team5
spec:
  host: db.team5.svc.cluster.local 
  trafficPolicy:
    tls:
      mode: STRICT
--- ########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: media-acquisition
  namespace: team5
spec:
  selector:
    matchLabels:
      app: media-acquisition
  template:
    metadata:
      labels:
        app: media-acquisition
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
      - name: server
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
        image: gcr.io/google-samples/microservices-demo/emailservice:v0.8.1 #insert correct image
        ports:
        - containerPort: 5050
        env:
        - name: PORT
          value: "5050"
        - name: DISABLE_PROFILER #Turn on if performance metrics are wanted
          value: "1"
        readinessProbe:
          periodSeconds: 5
          grpc:
            port: 5050
        livenessProbe:
          periodSeconds: 5
          grpc:
            port: 5050
        env:
        - name: PORT
          value: "5050"
        #resources: Check if these are needed in the long run
          #requests:
            #cpu: 100m
            #memory: 64Mi
          #limits:
            #cpu: 200m
            #memory: 128Mi
--- 
apiVersion: v1 
kind: Service
metadata:
  name: team5
spec:
  type: ClusterIP
  selector:
    app: media-acquisition
  ports:
  - name: grpc
    port: 5005
    targetPort: 5050
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: media-acquisition
  namespace: team5
spec:
  host: media-acquistion.team5.svc.cluster.local 
  trafficPolicy:
    tls:
      mode: STRICT
--- ########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argo-rollouts-metrics
  namespace: team7
spec:
  selector:
    matchLabels:
      app: argo-rollouts-metrics
  template:
    metadata:
      labels:
        app: argo-rollouts-metrics
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
      - name: server
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
        image: gcr.io/google-samples/microservices-demo/emailservice:v0.8.1 #insert correct image
        ports:
        - containerPort: 8090
        env:
        - name: PORT
          value: "8090"
        - name: DISABLE_PROFILER #Turn on if performance metrics are wanted
          value: "1"
        readinessProbe:
          periodSeconds: 5
          grpc:
            port: 8090
        livenessProbe:
          periodSeconds: 5
          grpc:
            port: 8090
        env:
        - name: PORT
          value: "8090"
        #resources: Check if these are needed in the long run
          #requests:
            #cpu: 100m
            #memory: 64Mi
          #limits:
            #cpu: 200m
            #memory: 128Mi
--- 
apiVersion: v1 
kind: Service
metadata:
  name: team7
spec:
  type: ClusterIP
  selector:
    app: argo-rollouts-metrics
  ports:
  - name: grpc
    port: 5007
    targetPort: 8090
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: argo-rollouts-metrics
  namespace: team7
spec:
  host: argo-rollouts-metrics.team7.svc.cluster.local 
  trafficPolicy:
    tls:
      mode: STRICT
--- ########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gitlab-runner
  namespace: team7
spec:
  selector:
    matchLabels:
      app: gitlab-runner
  template:
    metadata:
      labels:
        app: gitlab-runner
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
      - name: server
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
        image: gcr.io/google-samples/microservices-demo/emailservice:v0.8.1 #insert correct image
        ports:
        - containerPort: 9252
        env:
        - name: PORT
          value: "9252"
        - name: DISABLE_PROFILER #Turn on if performance metrics are wanted
          value: "1"
        readinessProbe:
          periodSeconds: 5
          grpc:
            port: 9252
        livenessProbe:
          periodSeconds: 5
          grpc:
            port: 9252
        env:
        - name: PORT
          value: "9252"
        #resources: Check if these are needed in the long run
          #requests:
            #cpu: 100m
            #memory: 64Mi
          #limits:
            #cpu: 200m
            #memory: 128Mi
--- 
apiVersion: v1 
kind: Service
metadata:
  name: team7
spec:
  type: ClusterIP
  selector:
    app: gitlab-runner
  ports:
  - name: grpc
    port: 5007
    targetPort: 9252
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: gitlab-runner
  namespace: team7
spec:
  host: gitlab-runner.team7.svc.cluster.local 
  trafficPolicy:
    tls:
      mode: STRICT
--- ########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: testapplication
  namespace: team7
spec:
  selector:
    matchLabels:
      app: testapplication
  template:
    metadata:
      labels:
        app: testapplication
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
      - name: server
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
        image: gcr.io/google-samples/microservices-demo/emailservice:v0.8.1 #insert correct image
        ports:
        - containerPort: 80
        env:
        - name: PORT
          value: "80"
        - name: DISABLE_PROFILER #Turn on if performance metrics are wanted
          value: "1"
        readinessProbe:
          periodSeconds: 5
          grpc:
            port: 80
        livenessProbe:
          periodSeconds: 5
          grpc:
            port: 80
        env:
        - name: PORT
          value: "80"
        #resources: Check if these are needed in the long run
          #requests:
            #cpu: 100m
            #memory: 64Mi
          #limits:
            #cpu: 200m
            #memory: 128Mi
--- 
apiVersion: v1 
kind: Service
metadata:
  name: team7
spec:
  type: ClusterIP
  selector:
    app: testapplication
  ports:
  - name: grpc
    port: 5007
    targetPort: 80
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: testapplication
  namespace: team7
spec:
  host: testapplication.team7.svc.cluster.local 
  trafficPolicy:
    tls:
      mode: STRICT
--- ########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service03
  namespace: team8
spec:
  selector:
    matchLabels:
      app: service03
  template:
    metadata:
      labels:
        app: service03
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
      - name: server
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
        image: gcr.io/google-samples/microservices-demo/emailservice:v0.8.1 #insert correct image
        ports:
        - containerPort: 80
        env:
        - name: PORT
          value: "80"
        - name: DISABLE_PROFILER #Turn on if performance metrics are wanted
          value: "1"
        readinessProbe:
          periodSeconds: 5
          grpc:
            port: 80
        livenessProbe:
          periodSeconds: 5
          grpc:
            port: 80
        env:
        - name: PORT
          value: "80"
        #resources: Check if these are needed in the long run
          #requests:
            #cpu: 100m
            #memory: 64Mi
          #limits:
            #cpu: 200m
            #memory: 128Mi
--- 
apiVersion: v1 
kind: Service
metadata:
  name: team8
spec:
  type: ClusterIP
  selector:
    app: service03
  ports:
  - name: grpc
    port: 5008
    targetPort: 80
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: service03
  namespace: team8
spec:
  host: service03.team8.svc.cluster.local 
  trafficPolicy:
    tls:
      mode: STRICT
--- ########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service03
  namespace: team9
spec:
  selector:
    matchLabels:
      app: service09
  template:
    metadata:
      labels:
        app: service09
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
      - name: server
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
        image: gcr.io/google-samples/microservices-demo/emailservice:v0.8.1 #insert correct image
        ports:
        - containerPort: 80
        env:
        - name: PORT
          value: "80"
        - name: DISABLE_PROFILER #Turn on if performance metrics are wanted
          value: "1"
        readinessProbe:
          periodSeconds: 5
          grpc:
            port: 80
        livenessProbe:
          periodSeconds: 5
          grpc:
            port: 80
        env:
        - name: PORT
          value: "80"
        #resources: Check if these are needed in the long run
          #requests:
            #cpu: 100m
            #memory: 64Mi
          #limits:
            #cpu: 200m
            #memory: 128Mi
--- 
apiVersion: v1 
kind: Service
metadata:
  name: team9
spec:
  type: ClusterIP
  selector:
    app: service09
  ports:
  - name: grpc
    port: 5009
    targetPort: 80
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: service09
  namespace: team9
spec:
  host: service09.team9.svc.cluster.local 
  trafficPolicy:
    tls:
      mode: STRICT
--- ########################################################